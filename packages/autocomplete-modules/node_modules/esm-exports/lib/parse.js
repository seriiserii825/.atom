"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ts = require("typescript");
var Path = require("path");
var _ = require("lodash");
var parse_file_1 = require("./parse-file");
var entry_1 = require("./entry");
var parse_declaration_1 = require("./parse-declaration");
var parse_keyword_1 = require("./parse-keyword");
var utils_1 = require("./utils");
var get = require("lodash/get");
function parse(sourceText, options) {
    if (options === void 0) { options = {}; }
    var filepath = options.filepath, module = options.module;
    var statements = get(options, 'statements');
    if (!statements) {
        var sourceFile = ts.createSourceFile('dummy.ts', sourceText, ts.ScriptTarget.ES2015, false);
        statements = sourceFile.statements;
    }
    return _.chain(statements)
        .map(function (node) {
        var names;
        if (node.kind === ts.SyntaxKind.ExportDeclaration) {
            names = parse_declaration_1.parseDeclaration(node);
        }
        else if (_.find(node.modifiers, function (m) { return m.kind === ts.SyntaxKind.ExportKeyword; })) {
            names = parse_keyword_1.parseKeyword(node);
        }
        else if (node.kind === ts.SyntaxKind.ModuleDeclaration) {
            if (_.find(node.modifiers, function (m) { return m.kind === ts.SyntaxKind.DeclareKeyword; }) && node.flags === ts.NodeFlags.None) {
                var module_1 = node.name.text;
                var statements_1 = node.body.statements;
                return parse(null, { module: module_1, statements: statements_1 });
            }
            else if (node.flags === ts.NodeFlags.Namespace) {
                var statements_2 = node.body.statements;
                return parse(null, { module: module, statements: statements_2 });
            }
            else {
                return [];
            }
        }
        else {
            return [];
        }
        var specifier = get(node, 'moduleSpecifier.text', null);
        var isDefault = Boolean(_.find(node.modifiers, function (m) { return m.kind === ts.SyntaxKind.DefaultKeyword; }));
        return names.map(function (name) { return ({ name: name, specifier: specifier, isDefault: isDefault }); });
    })
        .flatten()
        .map(function (p) {
        if (p instanceof Promise) {
            return p;
        }
        var name = p.name, specifier = p.specifier, isDefault = p.isDefault;
        if (!name && specifier && filepath) {
            var dirname = Path.dirname(filepath);
            return parse_file_1.parseFile(specifier, { dirname: dirname, module: module });
        }
        var entry = new entry_1.Entry({ name: name, filepath: filepath, specifier: specifier, module: module, isDefault: isDefault });
        return Promise.resolve(entry);
    })
        .thru(function (promises) { return Promise.all(promises); })
        .value()
        .then(function (entryList) { return utils_1.uniqEntryList(entryList); });
}
exports.parse = parse;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvcGFyc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBaUM7QUFDakMsMkJBQTZCO0FBQzdCLDBCQUE0QjtBQUM1QiwyQ0FBeUM7QUFDekMsaUNBQWdDO0FBQ2hDLHlEQUF1RDtBQUN2RCxpREFBK0M7QUFDL0MsaUNBQXdDO0FBQ3hDLGdDQUFtQztBQVFuQyxlQUFzQixVQUFrQixFQUFFLE9BQTBCO0lBQTFCLHdCQUFBLEVBQUEsWUFBMEI7SUFDeEQsSUFBQSwyQkFBUSxFQUFFLHVCQUFNLENBQWE7SUFDckMsSUFBSSxVQUFVLEdBQUcsR0FBRyxDQUFDLE9BQU8sRUFBRSxZQUFZLENBQW1CLENBQUM7SUFDOUQsRUFBRSxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1FBQ2QsSUFBTSxVQUFVLEdBQUcsRUFBRSxDQUFDLGdCQUFnQixDQUFDLFVBQVUsRUFBRSxVQUFVLEVBQUUsRUFBRSxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDOUYsVUFBVSxHQUFHLFVBQVUsQ0FBQyxVQUFpQixDQUFDO0lBQzlDLENBQUM7SUFDRCxNQUFNLENBQUUsQ0FBQyxDQUFDLEtBQWEsQ0FBQyxVQUFVLENBQUM7U0FDOUIsR0FBRyxDQUFDLFVBQUMsSUFBYTtRQUNmLElBQUksS0FBZSxDQUFDO1FBQ3BCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLEtBQUssRUFBRSxDQUFDLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUM7WUFDaEQsS0FBSyxHQUFHLG9DQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ25DLENBQUM7UUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxDQUFDLElBQUksS0FBSyxF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